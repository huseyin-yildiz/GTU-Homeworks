Nonterminals useless in grammar

   LISTVALUE
   VALUES


Terminals unused in grammar

   KW_LESS
   KW_LIST
   KW_EXIT
   KW_LOAD
   KW_DISP
   OP_DBLMULT
   OP_CC
   OP_COMMA
   COMMENT
   QMARK


Rules useless in grammar

   33 LISTVALUE: OP_OP VALUES OP_CP
   34          | OP_OP OP_CP
   35          | OP_OP KW_LIST VALUES OP_CP

   36 VALUES: VALUES EXPI
   37       | EXPI


Grammar

    0 $accept: START $end

    1 START: INPUT

    2 INPUT: EXPI
    3      | EXPLISTI
    4      | EXPB

    5 EXPI: OP_OP OP_PLUS EXPI EXPI OP_CP
    6     | OP_OP OP_MINUS EXPI EXPI OP_CP
    7     | OP_OP OP_MULT EXPI EXPI OP_CP
    8     | OP_OP OP_DIV EXPI EXPI OP_CP
    9     | IDENTIFIER
   10     | INTVALUE
   11     | OP_OP KW_SET IDENTIFIER EXPI OP_CP
   12     | OP_OP KW_DEFFUN IDENTIFIER IDLIST EXPLISTI OP_CP
   13     | OP_OP IDENTIFIER EXPLISTI OP_CP
   14     | OP_OP KW_IF EXPB EXPI OP_CP
   15     | OP_OP KW_IF EXPB EXPI EXPI OP_CP
   16     | OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP
   17     | OP_OP KW_DEFVAR NEW_IDENTIFIER EXPI OP_CP

   18 EXPB: OP_OP KW_AND EXPB EXPB OP_CP
   19     | OP_OP KW_OR EXPB EXPB OP_CP
   20     | OP_OP KW_NOT EXPB OP_CP
   21     | OP_OP KW_EQUAL EXPI EXPI OP_CP
   22     | OP_OP KW_EQUAL EXPB EXPB OP_CP
   23     | KW_TRUE
   24     | KW_FALSE

   25 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI OP_CP
   26         | OP_OP KW_APPEND EXPI EXPLISTI OP_CP
   27         | KW_NIL

   28 IDLIST: OP_OC IDENTIFIERS OP_CP
   29       | OP_OC OP_OC
   30       | KW_NIL

   31 IDENTIFIERS: IDENTIFIERS IDENTIFIER
   32            | IDENTIFIER IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
KW_AND (258) 18
KW_OR (259) 19
KW_NOT (260) 20
KW_EQUAL (261) 21 22
KW_LESS (262)
KW_NIL (263) 27 30
KW_LIST (264)
KW_APPEND (265) 26
KW_CONCAT (266) 25
KW_SET (267) 11
KW_DEFFUN (268) 12
KW_FOR (269) 16
KW_IF (270) 14 15
KW_EXIT (271)
KW_LOAD (272)
KW_DISP (273)
KW_TRUE (274) 23
KW_FALSE (275) 24
OP_PLUS (276) 5
OP_MINUS (277) 6
OP_DIV (278) 8
OP_DBLMULT (279)
OP_MULT (280) 7
OP_OP (281) 5 6 7 8 11 12 13 14 15 16 17 18 19 20 21 22 25 26
OP_CP (282) 5 6 7 8 11 12 13 14 15 16 17 18 19 20 21 22 25 26 28
OP_CC (283)
OP_OC (284) 28 29
OP_COMMA (285)
COMMENT (286)
KW_DEFVAR (287) 17
INTVALUE (288) 10
IDENTIFIER (289) 9 11 12 13 16 31 32
NEW_IDENTIFIER (290) 17
QMARK (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
START (38)
    on left: 1, on right: 0
INPUT (39)
    on left: 2 3 4, on right: 1
EXPI (40)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 2 5 6 7 8
    11 14 15 16 17 21 26
EXPB (41)
    on left: 18 19 20 21 22 23 24, on right: 4 14 15 18 19 20 22
EXPLISTI (42)
    on left: 25 26 27, on right: 3 12 13 16 25 26
IDLIST (43)
    on left: 28 29 30, on right: 12
IDENTIFIERS (44)
    on left: 31 32, on right: 28 31


State 0

    0 $accept: . START $end

    KW_NIL      shift, and go to state 1
    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 4
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    START     go to state 7
    INPUT     go to state 8
    EXPI      go to state 9
    EXPB      go to state 10
    EXPLISTI  go to state 11


State 1

   27 EXPLISTI: KW_NIL .

    $default  reduce using rule 27 (EXPLISTI)


State 2

   23 EXPB: KW_TRUE .

    $default  reduce using rule 23 (EXPB)


State 3

   24 EXPB: KW_FALSE .

    $default  reduce using rule 24 (EXPB)


State 4

    5 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    6     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    7     | OP_OP . OP_MULT EXPI EXPI OP_CP
    8     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   12     | OP_OP . KW_DEFFUN IDENTIFIER IDLIST EXPLISTI OP_CP
   13     | OP_OP . IDENTIFIER EXPLISTI OP_CP
   14     | OP_OP . KW_IF EXPB EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   16     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP
   17     | OP_OP . KW_DEFVAR NEW_IDENTIFIER EXPI OP_CP
   18 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   19     | OP_OP . KW_OR EXPB EXPB OP_CP
   20     | OP_OP . KW_NOT EXPB OP_CP
   21     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   22     | OP_OP . KW_EQUAL EXPB EXPB OP_CP
   25 EXPLISTI: OP_OP . KW_CONCAT EXPLISTI EXPLISTI OP_CP
   26         | OP_OP . KW_APPEND EXPI EXPLISTI OP_CP

    KW_AND      shift, and go to state 12
    KW_OR       shift, and go to state 13
    KW_NOT      shift, and go to state 14
    KW_EQUAL    shift, and go to state 15
    KW_APPEND   shift, and go to state 16
    KW_CONCAT   shift, and go to state 17
    KW_SET      shift, and go to state 18
    KW_DEFFUN   shift, and go to state 19
    KW_FOR      shift, and go to state 20
    KW_IF       shift, and go to state 21
    OP_PLUS     shift, and go to state 22
    OP_MINUS    shift, and go to state 23
    OP_DIV      shift, and go to state 24
    OP_MULT     shift, and go to state 25
    KW_DEFVAR   shift, and go to state 26
    IDENTIFIER  shift, and go to state 27


State 5

   10 EXPI: INTVALUE .

    $default  reduce using rule 10 (EXPI)


State 6

    9 EXPI: IDENTIFIER .

    $default  reduce using rule 9 (EXPI)


State 7

    0 $accept: START . $end

    $end  shift, and go to state 28


State 8

    1 START: INPUT .

    $default  reduce using rule 1 (START)


State 9

    2 INPUT: EXPI .

    $default  reduce using rule 2 (INPUT)


State 10

    4 INPUT: EXPB .

    $default  reduce using rule 4 (INPUT)


State 11

    3 INPUT: EXPLISTI .

    $default  reduce using rule 3 (INPUT)


State 12

   18 EXPB: OP_OP KW_AND . EXPB EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 30


State 13

   19 EXPB: OP_OP KW_OR . EXPB EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 31


State 14

   20 EXPB: OP_OP KW_NOT . EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 32


State 15

   21 EXPB: OP_OP KW_EQUAL . EXPI EXPI OP_CP
   22     | OP_OP KW_EQUAL . EXPB EXPB OP_CP

    KW_TRUE     shift, and go to state 2
    KW_FALSE    shift, and go to state 3
    OP_OP       shift, and go to state 33
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 34
    EXPB  go to state 35


State 16

   26 EXPLISTI: OP_OP KW_APPEND . EXPI EXPLISTI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 37


State 17

   25 EXPLISTI: OP_OP KW_CONCAT . EXPLISTI EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 39


State 18

   11 EXPI: OP_OP KW_SET . IDENTIFIER EXPI OP_CP

    IDENTIFIER  shift, and go to state 40


State 19

   12 EXPI: OP_OP KW_DEFFUN . IDENTIFIER IDLIST EXPLISTI OP_CP

    IDENTIFIER  shift, and go to state 41


State 20

   16 EXPI: OP_OP KW_FOR . OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP

    OP_OP  shift, and go to state 42


State 21

   14 EXPI: OP_OP KW_IF . EXPB EXPI OP_CP
   15     | OP_OP KW_IF . EXPB EXPI EXPI OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 43


State 22

    5 EXPI: OP_OP OP_PLUS . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 44


State 23

    6 EXPI: OP_OP OP_MINUS . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 45


State 24

    8 EXPI: OP_OP OP_DIV . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 46


State 25

    7 EXPI: OP_OP OP_MULT . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 47


State 26

   17 EXPI: OP_OP KW_DEFVAR . NEW_IDENTIFIER EXPI OP_CP

    NEW_IDENTIFIER  shift, and go to state 48


State 27

   13 EXPI: OP_OP IDENTIFIER . EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 49


State 28

    0 $accept: START $end .

    $default  accept


State 29

   18 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   19     | OP_OP . KW_OR EXPB EXPB OP_CP
   20     | OP_OP . KW_NOT EXPB OP_CP
   21     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   22     | OP_OP . KW_EQUAL EXPB EXPB OP_CP

    KW_AND    shift, and go to state 12
    KW_OR     shift, and go to state 13
    KW_NOT    shift, and go to state 14
    KW_EQUAL  shift, and go to state 15


State 30

   18 EXPB: OP_OP KW_AND EXPB . EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 50


State 31

   19 EXPB: OP_OP KW_OR EXPB . EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 51


State 32

   20 EXPB: OP_OP KW_NOT EXPB . OP_CP

    OP_CP  shift, and go to state 52


State 33

    5 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    6     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    7     | OP_OP . OP_MULT EXPI EXPI OP_CP
    8     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   12     | OP_OP . KW_DEFFUN IDENTIFIER IDLIST EXPLISTI OP_CP
   13     | OP_OP . IDENTIFIER EXPLISTI OP_CP
   14     | OP_OP . KW_IF EXPB EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   16     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP
   17     | OP_OP . KW_DEFVAR NEW_IDENTIFIER EXPI OP_CP
   18 EXPB: OP_OP . KW_AND EXPB EXPB OP_CP
   19     | OP_OP . KW_OR EXPB EXPB OP_CP
   20     | OP_OP . KW_NOT EXPB OP_CP
   21     | OP_OP . KW_EQUAL EXPI EXPI OP_CP
   22     | OP_OP . KW_EQUAL EXPB EXPB OP_CP

    KW_AND      shift, and go to state 12
    KW_OR       shift, and go to state 13
    KW_NOT      shift, and go to state 14
    KW_EQUAL    shift, and go to state 15
    KW_SET      shift, and go to state 18
    KW_DEFFUN   shift, and go to state 19
    KW_FOR      shift, and go to state 20
    KW_IF       shift, and go to state 21
    OP_PLUS     shift, and go to state 22
    OP_MINUS    shift, and go to state 23
    OP_DIV      shift, and go to state 24
    OP_MULT     shift, and go to state 25
    KW_DEFVAR   shift, and go to state 26
    IDENTIFIER  shift, and go to state 27


State 34

   21 EXPB: OP_OP KW_EQUAL EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 53


State 35

   22 EXPB: OP_OP KW_EQUAL EXPB . EXPB OP_CP

    KW_TRUE   shift, and go to state 2
    KW_FALSE  shift, and go to state 3
    OP_OP     shift, and go to state 29

    EXPB  go to state 54


State 36

    5 EXPI: OP_OP . OP_PLUS EXPI EXPI OP_CP
    6     | OP_OP . OP_MINUS EXPI EXPI OP_CP
    7     | OP_OP . OP_MULT EXPI EXPI OP_CP
    8     | OP_OP . OP_DIV EXPI EXPI OP_CP
   11     | OP_OP . KW_SET IDENTIFIER EXPI OP_CP
   12     | OP_OP . KW_DEFFUN IDENTIFIER IDLIST EXPLISTI OP_CP
   13     | OP_OP . IDENTIFIER EXPLISTI OP_CP
   14     | OP_OP . KW_IF EXPB EXPI OP_CP
   15     | OP_OP . KW_IF EXPB EXPI EXPI OP_CP
   16     | OP_OP . KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP
   17     | OP_OP . KW_DEFVAR NEW_IDENTIFIER EXPI OP_CP

    KW_SET      shift, and go to state 18
    KW_DEFFUN   shift, and go to state 19
    KW_FOR      shift, and go to state 20
    KW_IF       shift, and go to state 21
    OP_PLUS     shift, and go to state 22
    OP_MINUS    shift, and go to state 23
    OP_DIV      shift, and go to state 24
    OP_MULT     shift, and go to state 25
    KW_DEFVAR   shift, and go to state 26
    IDENTIFIER  shift, and go to state 27


State 37

   26 EXPLISTI: OP_OP KW_APPEND EXPI . EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 55


State 38

   25 EXPLISTI: OP_OP . KW_CONCAT EXPLISTI EXPLISTI OP_CP
   26         | OP_OP . KW_APPEND EXPI EXPLISTI OP_CP

    KW_APPEND  shift, and go to state 16
    KW_CONCAT  shift, and go to state 17


State 39

   25 EXPLISTI: OP_OP KW_CONCAT EXPLISTI . EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 56


State 40

   11 EXPI: OP_OP KW_SET IDENTIFIER . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 57


State 41

   12 EXPI: OP_OP KW_DEFFUN IDENTIFIER . IDLIST EXPLISTI OP_CP

    KW_NIL  shift, and go to state 58
    OP_OC   shift, and go to state 59

    IDLIST  go to state 60


State 42

   16 EXPI: OP_OP KW_FOR OP_OP . IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP

    IDENTIFIER  shift, and go to state 61


State 43

   14 EXPI: OP_OP KW_IF EXPB . EXPI OP_CP
   15     | OP_OP KW_IF EXPB . EXPI EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 62


State 44

    5 EXPI: OP_OP OP_PLUS EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 63


State 45

    6 EXPI: OP_OP OP_MINUS EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 64


State 46

    8 EXPI: OP_OP OP_DIV EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 65


State 47

    7 EXPI: OP_OP OP_MULT EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 66


State 48

   17 EXPI: OP_OP KW_DEFVAR NEW_IDENTIFIER . EXPI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 67


State 49

   13 EXPI: OP_OP IDENTIFIER EXPLISTI . OP_CP

    OP_CP  shift, and go to state 68


State 50

   18 EXPB: OP_OP KW_AND EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 69


State 51

   19 EXPB: OP_OP KW_OR EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 70


State 52

   20 EXPB: OP_OP KW_NOT EXPB OP_CP .

    $default  reduce using rule 20 (EXPB)


State 53

   21 EXPB: OP_OP KW_EQUAL EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 71


State 54

   22 EXPB: OP_OP KW_EQUAL EXPB EXPB . OP_CP

    OP_CP  shift, and go to state 72


State 55

   26 EXPLISTI: OP_OP KW_APPEND EXPI EXPLISTI . OP_CP

    OP_CP  shift, and go to state 73


State 56

   25 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI . OP_CP

    OP_CP  shift, and go to state 74


State 57

   11 EXPI: OP_OP KW_SET IDENTIFIER EXPI . OP_CP

    OP_CP  shift, and go to state 75


State 58

   30 IDLIST: KW_NIL .

    $default  reduce using rule 30 (IDLIST)


State 59

   28 IDLIST: OP_OC . IDENTIFIERS OP_CP
   29       | OP_OC . OP_OC

    OP_OC       shift, and go to state 76
    IDENTIFIER  shift, and go to state 77

    IDENTIFIERS  go to state 78


State 60

   12 EXPI: OP_OP KW_DEFFUN IDENTIFIER IDLIST . EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 79


State 61

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER . EXPI EXPI OP_CP EXPLISTI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 80


State 62

   14 EXPI: OP_OP KW_IF EXPB EXPI . OP_CP
   15     | OP_OP KW_IF EXPB EXPI . EXPI OP_CP

    OP_OP       shift, and go to state 36
    OP_CP       shift, and go to state 81
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 82


State 63

    5 EXPI: OP_OP OP_PLUS EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 83


State 64

    6 EXPI: OP_OP OP_MINUS EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 84


State 65

    8 EXPI: OP_OP OP_DIV EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 85


State 66

    7 EXPI: OP_OP OP_MULT EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 86


State 67

   17 EXPI: OP_OP KW_DEFVAR NEW_IDENTIFIER EXPI . OP_CP

    OP_CP  shift, and go to state 87


State 68

   13 EXPI: OP_OP IDENTIFIER EXPLISTI OP_CP .

    $default  reduce using rule 13 (EXPI)


State 69

   18 EXPB: OP_OP KW_AND EXPB EXPB OP_CP .

    $default  reduce using rule 18 (EXPB)


State 70

   19 EXPB: OP_OP KW_OR EXPB EXPB OP_CP .

    $default  reduce using rule 19 (EXPB)


State 71

   21 EXPB: OP_OP KW_EQUAL EXPI EXPI OP_CP .

    $default  reduce using rule 21 (EXPB)


State 72

   22 EXPB: OP_OP KW_EQUAL EXPB EXPB OP_CP .

    $default  reduce using rule 22 (EXPB)


State 73

   26 EXPLISTI: OP_OP KW_APPEND EXPI EXPLISTI OP_CP .

    $default  reduce using rule 26 (EXPLISTI)


State 74

   25 EXPLISTI: OP_OP KW_CONCAT EXPLISTI EXPLISTI OP_CP .

    $default  reduce using rule 25 (EXPLISTI)


State 75

   11 EXPI: OP_OP KW_SET IDENTIFIER EXPI OP_CP .

    $default  reduce using rule 11 (EXPI)


State 76

   29 IDLIST: OP_OC OP_OC .

    $default  reduce using rule 29 (IDLIST)


State 77

   32 IDENTIFIERS: IDENTIFIER . IDENTIFIER

    IDENTIFIER  shift, and go to state 88


State 78

   28 IDLIST: OP_OC IDENTIFIERS . OP_CP
   31 IDENTIFIERS: IDENTIFIERS . IDENTIFIER

    OP_CP       shift, and go to state 89
    IDENTIFIER  shift, and go to state 90


State 79

   12 EXPI: OP_OP KW_DEFFUN IDENTIFIER IDLIST EXPLISTI . OP_CP

    OP_CP  shift, and go to state 91


State 80

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI . EXPI OP_CP EXPLISTI OP_CP

    OP_OP       shift, and go to state 36
    INTVALUE    shift, and go to state 5
    IDENTIFIER  shift, and go to state 6

    EXPI  go to state 92


State 81

   14 EXPI: OP_OP KW_IF EXPB EXPI OP_CP .

    $default  reduce using rule 14 (EXPI)


State 82

   15 EXPI: OP_OP KW_IF EXPB EXPI EXPI . OP_CP

    OP_CP  shift, and go to state 93


State 83

    5 EXPI: OP_OP OP_PLUS EXPI EXPI OP_CP .

    $default  reduce using rule 5 (EXPI)


State 84

    6 EXPI: OP_OP OP_MINUS EXPI EXPI OP_CP .

    $default  reduce using rule 6 (EXPI)


State 85

    8 EXPI: OP_OP OP_DIV EXPI EXPI OP_CP .

    $default  reduce using rule 8 (EXPI)


State 86

    7 EXPI: OP_OP OP_MULT EXPI EXPI OP_CP .

    $default  reduce using rule 7 (EXPI)


State 87

   17 EXPI: OP_OP KW_DEFVAR NEW_IDENTIFIER EXPI OP_CP .

    $default  reduce using rule 17 (EXPI)


State 88

   32 IDENTIFIERS: IDENTIFIER IDENTIFIER .

    $default  reduce using rule 32 (IDENTIFIERS)


State 89

   28 IDLIST: OP_OC IDENTIFIERS OP_CP .

    $default  reduce using rule 28 (IDLIST)


State 90

   31 IDENTIFIERS: IDENTIFIERS IDENTIFIER .

    $default  reduce using rule 31 (IDENTIFIERS)


State 91

   12 EXPI: OP_OP KW_DEFFUN IDENTIFIER IDLIST EXPLISTI OP_CP .

    $default  reduce using rule 12 (EXPI)


State 92

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPI . OP_CP EXPLISTI OP_CP

    OP_CP  shift, and go to state 94


State 93

   15 EXPI: OP_OP KW_IF EXPB EXPI EXPI OP_CP .

    $default  reduce using rule 15 (EXPI)


State 94

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP . EXPLISTI OP_CP

    KW_NIL  shift, and go to state 1
    OP_OP   shift, and go to state 38

    EXPLISTI  go to state 95


State 95

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI . OP_CP

    OP_CP  shift, and go to state 96


State 96

   16 EXPI: OP_OP KW_FOR OP_OP IDENTIFIER EXPI EXPI OP_CP EXPLISTI OP_CP .

    $default  reduce using rule 16 (EXPI)
